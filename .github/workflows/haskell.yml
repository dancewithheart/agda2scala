on: [push]
name: build
jobs:
  runhaskell:
    name: agda2scala
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: [9.10.1] # [9.6.6, 9.8.2, 9.10.1]
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v5

      - name: Set up GHC
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: '3.10.3'
          cabal-update: true

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Run Haskell tests
        run: cabal test all

      - name: Compile example Agda code to Scala 2
        run: cabal run -- agda2scala --out-dir=scala2/src/main/scala ./examples/adts.agda

      - name: Compile example Agda code to Scala 3
        run: cabal run -- agda2scala --scala-dialect=Scala3 --out-dir=scala3/src/main/scala ./examples/adts.agda

      - name: Set up JVM
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Set up Scala and SBT
        uses: sbt/setup-sbt@v1
      - name: compile & test result Scala 2 code
        run: sbt clean test
        working-directory: ./scala2
      - name: compile & test result Scala 3 code
        run: sbt clean test
        working-directory: ./scala3
